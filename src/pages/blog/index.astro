---
import { Image } from "astro:assets"
import BaseHead from "../../components/BaseHead.astro"
import Header from "../../components/Header.astro"
import Footer from "../../components/Footer.astro"

import { getCollection, getEntry } from "astro:content"
import FormattedDate from "../../components/FormattedDate.astro"
import settings from '../../data/settings.json';

const posts = (await getCollection("blog")).sort(
	(a, b) => a.data.date.valueOf() - b.data.date.valueOf()
);



	

const postsWithAuthors = await Promise.all(
	posts.map(async (post) => {
		const author = await getEntry(post.data.author);

		return { post, author }
	})
);



// console.dir(postsWithAuthors, { depth: 4 });
---

<!DOCTYPE html>
<html lang='en'>
	<head>
		<BaseHead title={settings.title} description={settings.description} />
		<style>
			main {
				width: 960px;
			}
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(50% - 1rem);
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			ul li:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			ul li:first-child img {
				width: 100%;
			}
			ul li:first-child .title {
				font-size: 2.369rem;
			}
			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
			ul li a:hover h4,
			ul li a:hover .date {
				color: rgb(var(--accent));
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
				ul li:first-child {
					margin-bottom: 0;
				}
				ul li:first-child .title {
					font-size: 1.563em;
				}
			}
		</style>
	</head>
	<body>
		<Header />

		<main>
			<section>

		
				<ul>
					{
						postsWithAuthors &&
							postsWithAuthors.map(({ post, author }) => (
								<li>
									<a href={`/blog/${post.slug}/`}>

										{post.data.image && 
						<Image width={720} height={360} src={post.data.image} alt="" transition:name={`image-${post.slug}`} />
						}

										
										<h4 class='title'>{post.data.title}</h4>
									
										<p>{author.data.name}</p>
						
										<p class='date'>
											<FormattedDate date={post.data.date} />
										</p>
									</a>
								</li>
							))
					}
				</ul>
			</section>
		</main>
		<Footer />
	</body>
</html>
